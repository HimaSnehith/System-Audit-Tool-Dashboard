Write-Output "Windows Defender Threat & Status Audit"
Write-Output "========================================"

# --- Section 1: Windows Defender Real-time Protection Status ---
Write-Output "`n[Windows Defender Real-time Protection Status]"
Write-Output "------------------------------------------------"
try {
    $mpPreference = Get-MpPreference -ErrorAction Stop

    $rtProtectionStatus = if ($mpPreference.RealtimeProtectionEnabled) {
        "✅ Enabled"
    } else {
        "❌ Disabled"
    }
    Write-Output "Real-time Protection: $rtProtectionStatus"

    $ioavProtectionStatus = if ($mpPreference.IOAVProtection) {
        "✅ Enabled (Scans downloaded files and attachments)"
    } else {
        "⚠ WARNING: Disabled (Downloaded files and attachments are NOT being scanned)"
    }
    Write-Output "Scan Downloaded Files and Attachments (IOAV Protection): $ioavProtectionStatus"

    $signatureUpdateInterval = "$($mpPreference.SignatureUpdateInterval) hours"
    Write-Output "Signature Update Interval: $signatureUpdateInterval"

    $lastSignatureUpdate = Get-MpComputerStatus | Select-Object -ExpandProperty AntivirusSignatureLastUpdated
    if ($lastSignatureUpdate) {
        Write-Output "Last Signature Update: $($lastSignatureUpdate.ToString("yyyy-MM-dd HH:mm:ss"))"
    } else {
        Write-Output "Last Signature Update: Not Available"
    }

} catch {
    Write-Output "⚠️ Error checking Windows Defender Real-time Protection status: $($_.Exception.Message)"
    Write-Output "Please ensure PowerShell is run with Administrator privileges."
}

# --- Section 2: Detected Threats Audit ---
Write-Output "`n[Detected Threats by Windows Defender]"
Write-Output "----------------------------------------"
try {
    # Get all threat detections by Windows Defender
    $threats = Get-MpThreatDetection -ErrorAction SilentlyContinue

    if ($threats.Count -eq 0) {
        Write-Output "✅ No malware threats currently detected by Windows Defender."
    } else {
        Write-Output "The following $($threats.Count) threats were detected:"
        foreach ($threat in $threats) {
            Write-Output " - Threat Name: $($threat.ThreatName)"
            Write-Output "   Category: $($threat.Category)"
            Write-Output "   Severity: $($threat.SeverityID)" # Numerical severity, can map to names if needed
            Write-Output "   Status: $($threat.DetectionStatus)" # Active, Quarantined, Removed, etc.
            Write-Output "   Detection Time: $($threat.DetectionTime.ToString("yyyy-MM-dd HH:mm:ss"))"
            Write-Output "   Resource: $($threat.Resources -join ', ')" # Files, registry keys etc.
            Write-Output "   Action Taken: $($threat.ActionID) (e.g., 1=Quarantine, 2=Remove, 3=Allow)" # Numerical action
            Write-Output "------------------------------------"
        }
    }
} catch {
    Write-Output "⚠️ Error fetching detected malware threats: $($_.Exception.Message)"
    Write-Output "Please ensure PowerShell is run with Administrator privileges."
}

Write-Output "`nRecommendations (CIS Benchmark Aligned):"
Write-Output "==========================================="
Write-Output "1. Enable Real-time Protection: Ensure Windows Defender's real-time protection is always enabled to actively monitor for and block threats. (CIS Control 8.1 - Malware Defenses)."
Write-Output "2. Enable IOAV Protection: Verify that 'Scan Downloaded Files and Attachments' (IOAV Protection) is enabled to scan content downloaded from the internet. (CIS Control 8.2 - Automated Malware Prevention)."
Write-Output "3. Update Signatures Frequently: Configure Windows Defender to download signature updates automatically and frequently (e.g., every 4 hours or less) to ensure protection against the latest threats. (CIS Control 8.3 - Malware Prevention Processes)."
Write-Output "4. Address Detected Threats: Immediately investigate, quarantine, or remove any detected threats. Do not ignore alerts. (CIS Control 13.x - Incident Response Management)."
Write-Output "5. Schedule Regular Scans: Even with real-time protection, schedule full system scans weekly or daily to catch dormant or missed threats."
Write-Output "6. Centralized Management: For enterprise environments, manage Windows Defender settings centrally via Group Policy or Microsoft Endpoint Manager to ensure consistent configuration. (CIS Control 3.x - Secure Configurations)."
Write-Output "7. Monitor Logs: Regularly review Windows Defender logs for detection history and scan results."